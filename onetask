#!/usr/bin/env python

import os
import sys
import argparse

from collection import TaskCollection, TaskError


TASKS_DATABASE = os.path.expanduser('~/.OneTask.json')


def get_args(args_list):
    parser = argparse.ArgumentParser(
        description='OneTask let you focus on one task at the time, avoiding '
                    'discouragement by seing all the remaining work to do.')
    subparsers = parser.add_subparsers(help='available actions')
    add_subparser = subparsers.add_parser('add', help='add a new task')
    add_subparser.add_argument('task', type=str, help='task message')
    add_subparser.set_defaults(func=tasks.add)
    get_subparser = subparsers.add_parser('get',
        help='display currently active task')
    get_subparser.set_defaults(func=tasks.get)
    done_subparser = subparsers.add_parser('done',
        help='mark active task as done')
    done_subparser.set_defaults(func=tasks.done)
    if len(args_list) == 0:
        return parser.print_help()
    else:
        return parser.parse_args(args_list)

if __name__ == '__main__':
    tasks = TaskCollection.load(TASKS_DATABASE, stdout=sys.stdout)
    args = get_args(sys.argv[1:])
    try:
        if args.func == tasks.add:
            args.func(unicode(args.task, "utf-8"))
        else:
            args.func()
    except AttributeError:
        pass
    except TaskError, err:
        sys.stderr.write(str(err) + "\n")
        sys.exit(1)
